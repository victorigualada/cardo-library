version: "3"
services:
  nginx:
    image: nginx:1.15-alpine
    container_name: 'nginx'
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    container_name: 'frontend'
    restart: unless-stopped
    ports:
      - '3001:3000'
    depends_on:
      - backend
    environment:
      - NODE_ENV={$NODE_ENV:-development}

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    container_name: 'backend'
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-docker}
      - NODE_CONFIG_DIR=./dist/config
      - FRONTEND_HOST=${FRONTEND_HOST}
      - JWT_SECRET=${JWT_SECRET}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-cardo}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cardo}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-cardo}
    depends_on:
      - db

  db:
    image: postgres:11.6
    container_name: 'db'
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME:-cardo}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cardo}
      - POSTGRES_DB=${POSTGRES_DATABASE:-cardo}

  adminer:
    command: php -S 0.0.0.0:8080 -t /var/www/html
    image: adminer
    ports:
      - "8082:8080"
    depends_on:
      - db

